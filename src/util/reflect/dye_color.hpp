// Generated by reflect_map tool
#pragma once
#include <string>
namespace copper_server::reflect{
template<>struct enum_data<copper_server::base_objects::dye_color> {using item = std::pair<std::string_view, copper_server::base_objects::dye_color>;
static constexpr inline std::array<item, 16> values = {item{"white", copper_server::base_objects::dye_color::white}, item{"orange", copper_server::base_objects::dye_color::orange}, item{"magenta", copper_server::base_objects::dye_color::magenta}, item{"light_blue", copper_server::base_objects::dye_color::light_blue}, item{"yellow", copper_server::base_objects::dye_color::yellow}, item{"lime", copper_server::base_objects::dye_color::lime}, item{"pink", copper_server::base_objects::dye_color::pink}, item{"gray", copper_server::base_objects::dye_color::gray}, item{"light_gray", copper_server::base_objects::dye_color::light_gray}, item{"cyan", copper_server::base_objects::dye_color::cyan}, item{"purple", copper_server::base_objects::dye_color::purple}, item{"blue", copper_server::base_objects::dye_color::blue}, item{"brown", copper_server::base_objects::dye_color::brown}, item{"green", copper_server::base_objects::dye_color::green}, item{"red", copper_server::base_objects::dye_color::red}, item{"black", copper_server::base_objects::dye_color::black}};};
template<>consteval std::string_view type_name<copper_server::base_objects::dye_color>() { return "copper_server::base_objects::dye_color"; }
}
